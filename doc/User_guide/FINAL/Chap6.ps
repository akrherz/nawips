%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 295 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
% The following commented out code did not work for tangent lines of zero
% length.  The code following it was provided by Frame to patch this error.
%
%/RR { 
%	/rad exch def
%	normalize
%	/y2 exch def
%	/x2 exch def
%	normalize
%	/y1 exch def
%	/x1 exch def
%	newpath
%	x1 y1 rad add moveto
%	x1 y2 x2 y2 rad arcto
%	x2 y2 x2 y1 rad arcto
%	x2 y1 x1 y1 rad arcto
%	x1 y1 x1 y2 rad arcto
%	closepath
%	16 {pop} repeat
%	} bind def
/rarc
    {rad
     {arcto} stopped
    } bind def
/RR {
    /rad exch def
    normalize
    /y2 exch def
    /x2 exch def
    normalize
    /y1 exch def
    /x1 exch def
    mark
    newpath
    x1 y1 rad add moveto
    x1 y2 x2 y2 rarc
    x2 y2 x2 y1 rarc
    x2 y1 x1 y1 rarc
    x2 y1 x1 y1 rarc
    x1 y1 x1 y2 rarc
    closepath
    cleartomark
    } bind def

/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/cip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        cris indx placer 255 mul cvi put
        cgis indx placeg 255 mul cvi put
        cbis indx placeb 255 mul cvi put
    } for pop cris

	
	} bind def
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
    currentcolortransfer
    /gryt exch def
    /blut exch def
    /grnt exch def
    /redt exch def
    0 1 255 {
        /indx exch def
        /cynu 1 red indx get 255 div sub def
        /magu 1 green indx get 255 div sub def
        /yelu 1 blue indx get 255 div sub def
        /k cynu magu min yelu min def
        nredt indx 1 0 cynu max sub redt exec put
        ngreent indx 1 0 magu max sub grnt exec put
        nbluet indx 1 0 yelu max sub blut exec put
        ngrayt indx 1 k sub gryt exec put
    } for
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
    /ris w d wbytes string def
    /gis w d wbytes string def
    /bis w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop
    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        ris indx placer 255 mul cvi put
        gis indx placeg 255 mul cvi put
        bis indx placeb 255 mul cvi put
    } for pop ris}
	{gis} {bis} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
    /cris lb string def
    /cgis lb string def
    /cbis lb string def
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cip} {cgis} {cbis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 6 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Helvetica FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(GEMPAK Real-time Decoders) 231.03 748 T
0 10 Q
(N-AWIPS 5.4 User\325s Guide) 108 36 T
(6-1) 307.78 36 T
(October 1996) 458.67 36 T
0 18 Q
(CHAPTER 6) 264.02 672 T
0 14 Q
(GEMP) 217.55 642.67 T
(AK Real-time Decoders) 257.72 642.67 T
(6.1) 108 590.67 T
3.89 (Decoder Common Characteristics) 151.2 590.67 P
1 12 Q
0.61 (The GEMPAK real-time decoders are a set of programs that translate meteorological) 108 564 P
-0.54 (ASCII data into data suitable for storage in GEMPAK files. The following decoders are) 108 550 P
(currently implemented for use on real-time ASCII data feeds:) 108 536 T
2 10 Q
2.78 (DCAMOS) 144 513.33 P
2.78 (decodes Aviation Model Output Statistics) 225 513.33 P
2.78 (DCFFG) 144 503.33 P
2.78 (decodes Flash Flood Guidance data) 225 503.33 P
2.78 (DCHRLY) 144 493.33 P
2.78 (decodes raw SAO and METAR reports) 225 493.33 P
2.78 (DCMMOS) 144 483.33 P
2.78 (decodes MRF Model Output Statistics data) 225 483.33 P
(DCNMOS) 144 473.33 T
2.78 (decodes NGM Model Output Statistics) 225 473.33 P
2.78 (DCUAIR) 144 463.33 P
2.78 (decodes Upper Air Sounding data) 225 463.33 P
1 12 Q
-0.05 (Each real-time decoder is a stand-alone program that may be activated from the UNIX) 108 438 P
-0.49 (command line, from a shell script, or from another program. The command line options) 108 424 P
(are as follows:) 108 410 T
2 10 Q
2.78 (-v N) 144 387.33 P
2.78 (Set the level of verbosity for the logs) 225 387.33 P
2.78 (-c curtim) 144 377.33 P
2.78 (Set the "current" time) 225 377.33 P
2.78 (-b nhours) 144 367.33 P
2.78 (Number of hours to decode prior to "current" time) 225 367.33 P
2.78 (-d decoder_log) 144 357.33 P
2.78 (Set the decoder log file name) 225 357.33 P
2.78 (-t time_out) 144 347.33 P
2.78 (Set the interval for the time out) 225 347.33 P
(-n) 144 337.33 T
2.78 (Set a flag to NOT save the text data) 225 337.33 P
(-h) 144 327.33 T
2.78 (Print the help file, then exit the program) 225 327.33 P
2.78 (-p prmfil) 144 317.33 P
2.78 (Set the parameter packing table) 225 317.33 P
2.78 (-s stntbl) 144 307.33 P
2.78 (Set the station table) 225 307.33 P
2.78 (-a iadstn) 144 297.33 P
2.78 (Set the number of additional stations) 225 297.33 P
2.78 (-m maxtim) 144 287.33 P
2.78 (Set the maximum number of times) 225 287.33 P
1 12 Q
-0.4 (The input data stream is fed to each decoder via the standard input.  The standard input,) 108 266 P
(in turn, may be fed from a file or from a real-time data feed.) 108 252 T
(Each decoder writes its output to a GEMPAK data file.  For example:) 108 224 T
0 10 Q
(dcamos [other_options] output_file < input_file) 144 199.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 108 176 P
-0.09 (the date and time of the decoded bulletin or report to replace the following characters:) 108 162 P
2 10 Q
(YY) 131.04 137.33 T
2.78 (Year without the century) 177.84 137.33 P
(MM) 131.04 125.33 T
2.78 (Month number) 177.84 125.33 P
(DD) 131.04 113.33 T
2.78 (Day) 177.84 113.33 P
(HH) 131.04 101.33 T
2.78 (Hour) 177.84 101.33 P
(NN) 131.04 89.33 T
2.78 (Minute) 177.84 89.33 P
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(GEMPAK Real-time Decoders) 213.03 748 T
0 10 Q
(N-AWIPS 5.4 User\325s Guide) 90 36 T
(6-2) 289.78 36 T
(October 1996) 440.67 36 T
0 14 Q
(6.2) 90 710.67 T
3.89 (DCAMOS) 133.2 710.67 P
1 12 Q
0.51 (DCAMOS decodes Aviation Model Output Statistics data from a real-time data feed,) 90 684 P
1.87 (or from a file fed to the program through standard input, and writes the data to a) 90 670 P
(GEMPAK surface file.  The program is controlled by inputs to the command line.) 90 656 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 90 628 P
(real-time data feeds:) 90 614 T
0 10 Q
(dcamos [options] output_file) 126 589.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 90 566 P
(The input file must also be specified. For example:) 90 552 T
0 10 Q
(dcamos -c YYMMDD/HHNN [other_options] output_file < input_file) 126 527.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 90 504 P
(the date and time of the bulletin or report to replace the following characters.) 90 490 T
2 10 Q
(YY) 113.04 464.33 T
2.78 (Year without the century) 207.36 464.33 P
(MM) 113.04 453.33 T
2.78 (Month number) 207.36 453.33 P
(DD) 113.04 442.33 T
2.78 (Day) 207.36 442.33 P
(HH) 113.04 431.33 T
2.78 (Hour) 207.36 431.33 P
(NN) 113.04 420.33 T
2.78 (Minute) 207.36 420.33 P
0 14 Q
(6.3) 90 370.67 T
(DCFFG) 133.2 370.67 T
1 12 Q
-0.38 (DCFFG decodes flash flood guidance data from a real-time data feed, or from a file fed) 90 344 P
0.12 (to the program through standard input, and writes the data to a GEMPAK surface file.) 90 330 P
(The program is controlled by inputs to the command line.) 90 316 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 90 288 P
(real-time data feeds:) 90 274 T
0 10 Q
(dcffg [options] output_file) 126 249.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 90 226 P
(The input file must be also be specified.  For example:) 90 212 T
0 10 Q
(dcffg -c YYMMDD/HHNN [other_options] output_file < input_file) 126 187.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 90 164 P
(the date and time of the bulletin or report to replace the following characters.) 90 150 T
2 10 Q
(YY) 113.04 124.33 T
2.78 (Year without the century) 207.36 124.33 P
(MM) 113.04 113.33 T
2.78 (Month number) 207.36 113.33 P
(DD) 113.04 102.33 T
2.78 (Day) 207.36 102.33 P
(HH) 113.04 91.33 T
2.78 (Hour) 207.36 91.33 P
(NN) 113.04 80.33 T
2.78 (Minute) 207.36 80.33 P
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(GEMPAK Real-time Decoders) 231.03 748 T
0 10 Q
(N-AWIPS 5.4 User\325s Guide) 108 36 T
(6-3) 307.78 36 T
(October 1996) 458.67 36 T
0 14 Q
(6.4) 108 710.67 T
3.89 (DCHRLY) 151.2 710.67 P
1 12 Q
0.28 (DCHRLY decodes raw SAO and METAR reports from a real-time data feed, or from) 108 684 P
1.04 (a file fed to the program through standard input, and writes the data to a GEMPAK) 108 670 P
(surface file.  The program is controlled by inputs to the command line.) 108 656 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 108 628 P
(real-time data feeds:) 108 614 T
0 10 Q
(dchrly [options] output_file) 144 589.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 108 566 P
(The input file must be also be specified.  For example:) 108 552 T
0 10 Q
(dchrly -c YYMMDD/HHNN [other_options] output_file < input_file) 144 529.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 108 506 P
(the date and time of the bulletin or report to replace the following characters.) 108 492 T
2 10 Q
(YY) 131.04 466.33 T
2.78 (Year without the century) 225.36 466.33 P
(MM) 131.04 455.33 T
2.78 (Month number) 225.36 455.33 P
(DD) 131.04 444.33 T
2.78 (Day) 225.36 444.33 P
(HH) 131.04 433.33 T
2.78 (Hour) 225.36 433.33 P
(NN) 131.04 422.33 T
2.78 (Minute) 225.36 422.33 P
0 14 Q
(6.5) 108 372.67 T
3.89 (DCMMOS) 151.2 372.67 P
1 12 Q
0.61 (DCMMOS decodes MRF Model Output Statistics data from a real-time data feed, or) 108 346 P
-0.67 (from a file fed to the program through standard input, and writes the data to a GEMPAK) 108 332 P
(surface file.  The program is controlled by inputs to the command line.) 108 318 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 108 290 P
(real-time data feeds:) 108 276 T
0 10 Q
(dcmmos [options] output_file) 144 251.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 108 228 P
(The input file must be also be specified.  For example:) 108 214 T
0 10 Q
(dcmmos -c YYMMDD/HHNN [other_options] output_file < input_file) 144 191.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 108 168 P
(the date and time of the bulletin or report to replace the following characters.) 108 154 T
2 10 Q
(YY) 131.04 128.33 T
2.78 (Year without the century) 225.36 128.33 P
(MM) 131.04 117.33 T
2.78 (Month number) 225.36 117.33 P
(DD) 131.04 106.33 T
2.78 (Day) 225.36 106.33 P
(HH) 131.04 95.33 T
2.78 (Hour) 225.36 95.33 P
(NN) 131.04 84.33 T
2.78 (Minute) 225.36 84.33 P
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(GEMPAK Real-time Decoders) 213.03 748 T
0 10 Q
(N-AWIPS 5.4 User\325s Guide) 90 36 T
(6-4) 289.78 36 T
(October 1996) 440.67 36 T
0 14 Q
(6.6) 90 710.67 T
3.89 (DCNMOS) 133.2 710.67 P
1 12 Q
-0.13 (DCNMOS decodes NGM Model Output Statistics data from a a real-time data feed, or) 90 684 P
-0.67 (from a file fed to the program through standard input, and writes the data to a GEMPAK) 90 670 P
(surface file.  The program is controlled by inputs to the command line.) 90 656 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 90 628 P
(real-time data feeds:) 90 614 T
0 10 Q
(dcnmos [options] output_file) 126 589.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 90 566 P
(The input file must be also be specified.  For example:) 90 552 T
0 10 Q
(dcnmos -c YYMMDD/HHNN [other_options] output_file < input_file) 126 529.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 90 506 P
(the date and time of the bulletin or report to replace the following characters.) 90 492 T
2 10 Q
(YY) 113.04 466.33 T
2.78 (Year without the century) 207.36 466.33 P
(MM) 113.04 455.33 T
2.78 (Month number) 207.36 455.33 P
(DD) 113.04 444.33 T
2.78 (Day) 207.36 444.33 P
(HH) 113.04 433.33 T
2.78 (Hour) 207.36 433.33 P
(NN) 113.04 422.33 T
2.78 (Minute) 207.36 422.33 P
0 14 Q
(6.7) 90 372.67 T
3.89 (DCUAIR) 133.2 372.67 P
1 12 Q
-0.33 (DCUAIR decodes upper air sounding data from a real-time data feed, or from a file fed) 90 346 P
-0.55 (to the program through standard input, and writes the data to a GEMPAK sounding file.) 90 332 P
(The program is controlled by inputs to the command line.) 90 318 T
-0.18 (The inputs are program options and the output file name or template.  For example, for) 90 290 P
(real-time data feeds:) 90 276 T
0 10 Q
(dcuair [options] output_file) 126 251.33 T
1 12 Q
0.82 (If running the program interactively with standard input, the -c option must be used.) 90 228 P
(The input file must be also be specified.  For example:) 90 214 T
0 10 Q
(dcuair -c YYMMDD/HHNN [other_options] output_file < input_file) 126 191.33 T
1 12 Q
0.33 (A template may be used to specify the output file name.  The file name template uses) 90 168 P
(the date and time of the bulletin or report to replace the following characters.) 90 154 T
2 10 Q
(YY) 113.04 128.33 T
2.78 (Year without the century) 207.36 128.33 P
(MM) 113.04 117.33 T
2.78 (Month number) 207.36 117.33 P
(DD) 113.04 106.33 T
2.78 (Day) 207.36 106.33 P
(HH) 113.04 95.33 T
2.78 (Hour) 207.36 95.33 P
(NN) 113.04 84.33 T
2.78 (Minute) 207.36 84.33 P
FMENDPAGE
%%EndPage: "4" 5
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 4 1
%%DocumentFonts: Helvetica-Bold
%%+ Times-Roman
%%+ Helvetica
