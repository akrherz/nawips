#!/bin/sh
if  [ $# != 0 ]
then
  version=$1
  path=$NAWIPS/extlibs/GNU/make/$version
  if  [ -d $path ]
  then
    echo "----->  BUILDING GNU make PROGRAM $version"
    mkdir -p $OS_LIB/extlibs/GNUmake
    cd $OS_LIB/extlibs/GNUmake

#=========================================================

#  Initialize "influential environment variables"

    export  FC=""		# Fortran compiler command
    export  F77=""		# Fortran 77 compiler command
    export  F90=""		# Fortran 90 compiler command
    export  CPP=""		# C prepocessor
    export  CXX=""		# C++ compiler command
    export  CXXCPP=""		# C++ preprocessor
    if [ $OS = "HPUX" ]
    then
      export  CFLAGS="+DA1.1"	# C compiler flags
    else
      export  CFLAGS=""
    fi
    export  FCFLAGS=""		# Fortran compiler flags
    export  FFLAGS=""		# Fortran 77/90 compiler flags
    export  LDFLAGS=""		# linker flags
    export  F90FLAGS=""		# Fortran 90 compiler flags
    export  CXXFLAGS=""		# C++ compiler flags
    export  CPPFLAGS="-DNDEBUG"	# C/C++ preprocessor flags

#=====================================================================
# Clean up after any previous configure/make
#    if  [ -f Makefile ]
#    then
#      make -s distclean
#    fi

# Run the configure script for this OS type
    ${path}/configure --prefix=$OS_ROOT --disable-shared \
		--disable-dependency-tracking

# Compile and install GNU make 
    echo "----->  COMPILING GNU make PROGRAM $version"
    make -s 
    echo "----->  INSTALLING GNU make PROGRAM as \"$OS_BIN/make\""
    make -s install

 # Clean up after this configure/make
 #   make -s distclean

###################################################################
    echo "----->  CREATION OF GNU make PROGRAM $version IS COMPLETE."
    echo "        =============================================="
  else
    echo "Directory \"$path\" does not exist!"
  fi
else
  echo "Please include a valid GNU make version; e.g., v3.81"
fi
